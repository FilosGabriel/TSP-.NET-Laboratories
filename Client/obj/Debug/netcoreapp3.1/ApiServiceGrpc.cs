// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/ApiService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Client {
  public static partial class MyService
  {
    static readonly string __ServiceName = "MyService";

    static readonly grpc::Marshaller<global::Client.RequestPost> __Marshaller_RequestPost = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Client.RequestPost.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Client.Response> __Marshaller_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Client.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Client.ResponsePost> __Marshaller_ResponsePost = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Client.ResponsePost.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Client.RequestById> __Marshaller_RequestById = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Client.RequestById.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Client.ResponseListPost> __Marshaller_ResponseListPost = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Client.ResponseListPost.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Client.RequestComment> __Marshaller_RequestComment = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Client.RequestComment.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Client.ResponseComment> __Marshaller_ResponseComment = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Client.ResponseComment.Parser.ParseFrom);

    static readonly grpc::Method<global::Client.RequestPost, global::Client.Response> __Method_AddPost = new grpc::Method<global::Client.RequestPost, global::Client.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPost",
        __Marshaller_RequestPost,
        __Marshaller_Response);

    static readonly grpc::Method<global::Client.RequestPost, global::Client.ResponsePost> __Method_UpdatePost = new grpc::Method<global::Client.RequestPost, global::Client.ResponsePost>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePost",
        __Marshaller_RequestPost,
        __Marshaller_ResponsePost);

    static readonly grpc::Method<global::Client.RequestById, global::Client.Response> __Method_DeletePost = new grpc::Method<global::Client.RequestById, global::Client.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePost",
        __Marshaller_RequestById,
        __Marshaller_Response);

    static readonly grpc::Method<global::Client.RequestById, global::Client.ResponsePost> __Method_GetPostById = new grpc::Method<global::Client.RequestById, global::Client.ResponsePost>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPostById",
        __Marshaller_RequestById,
        __Marshaller_ResponsePost);

    static readonly grpc::Method<global::Client.RequestById, global::Client.ResponseListPost> __Method_GetAllPosts = new grpc::Method<global::Client.RequestById, global::Client.ResponseListPost>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllPosts",
        __Marshaller_RequestById,
        __Marshaller_ResponseListPost);

    static readonly grpc::Method<global::Client.RequestComment, global::Client.ResponseComment> __Method_AddComment = new grpc::Method<global::Client.RequestComment, global::Client.ResponseComment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddComment",
        __Marshaller_RequestComment,
        __Marshaller_ResponseComment);

    static readonly grpc::Method<global::Client.RequestComment, global::Client.ResponseComment> __Method_UpdateComment = new grpc::Method<global::Client.RequestComment, global::Client.ResponseComment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateComment",
        __Marshaller_RequestComment,
        __Marshaller_ResponseComment);

    static readonly grpc::Method<global::Client.RequestById, global::Client.ResponseComment> __Method_GetCommentById = new grpc::Method<global::Client.RequestById, global::Client.ResponseComment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCommentById",
        __Marshaller_RequestById,
        __Marshaller_ResponseComment);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Client.ApiServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for MyService</summary>
    public partial class MyServiceClient : grpc::ClientBase<MyServiceClient>
    {
      /// <summary>Creates a new client for MyService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MyServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MyService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MyServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MyServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MyServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Client.Response AddPost(global::Client.RequestPost request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Client.Response AddPost(global::Client.RequestPost request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddPost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Client.Response> AddPostAsync(global::Client.RequestPost request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Client.Response> AddPostAsync(global::Client.RequestPost request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddPost, null, options, request);
      }
      public virtual global::Client.ResponsePost UpdatePost(global::Client.RequestPost request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Client.ResponsePost UpdatePost(global::Client.RequestPost request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponsePost> UpdatePostAsync(global::Client.RequestPost request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponsePost> UpdatePostAsync(global::Client.RequestPost request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePost, null, options, request);
      }
      public virtual global::Client.Response DeletePost(global::Client.RequestById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePost(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Client.Response DeletePost(global::Client.RequestById request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePost, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Client.Response> DeletePostAsync(global::Client.RequestById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePostAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Client.Response> DeletePostAsync(global::Client.RequestById request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePost, null, options, request);
      }
      public virtual global::Client.ResponsePost GetPostById(global::Client.RequestById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPostById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Client.ResponsePost GetPostById(global::Client.RequestById request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPostById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponsePost> GetPostByIdAsync(global::Client.RequestById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPostByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponsePost> GetPostByIdAsync(global::Client.RequestById request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPostById, null, options, request);
      }
      public virtual global::Client.ResponseListPost GetAllPosts(global::Client.RequestById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllPosts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Client.ResponseListPost GetAllPosts(global::Client.RequestById request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllPosts, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponseListPost> GetAllPostsAsync(global::Client.RequestById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllPostsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponseListPost> GetAllPostsAsync(global::Client.RequestById request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllPosts, null, options, request);
      }
      public virtual global::Client.ResponseComment AddComment(global::Client.RequestComment request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Client.ResponseComment AddComment(global::Client.RequestComment request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddComment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponseComment> AddCommentAsync(global::Client.RequestComment request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponseComment> AddCommentAsync(global::Client.RequestComment request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddComment, null, options, request);
      }
      public virtual global::Client.ResponseComment UpdateComment(global::Client.RequestComment request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateComment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Client.ResponseComment UpdateComment(global::Client.RequestComment request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateComment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponseComment> UpdateCommentAsync(global::Client.RequestComment request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCommentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponseComment> UpdateCommentAsync(global::Client.RequestComment request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateComment, null, options, request);
      }
      public virtual global::Client.ResponseComment GetCommentById(global::Client.RequestById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommentById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Client.ResponseComment GetCommentById(global::Client.RequestById request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCommentById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponseComment> GetCommentByIdAsync(global::Client.RequestById request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommentByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Client.ResponseComment> GetCommentByIdAsync(global::Client.RequestById request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCommentById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MyServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MyServiceClient(configuration);
      }
    }

  }
}
#endregion
