// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/ApiService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace gRPC2 {
  public static partial class MyService
  {
    static readonly string __ServiceName = "MyService";

    static readonly grpc::Marshaller<global::gRPC2.RequestPost> __Marshaller_RequestPost = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC2.RequestPost.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPC2.Response> __Marshaller_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC2.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPC2.ResponsePost> __Marshaller_ResponsePost = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC2.ResponsePost.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPC2.RequestById> __Marshaller_RequestById = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC2.RequestById.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPC2.ResponseListPost> __Marshaller_ResponseListPost = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC2.ResponseListPost.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPC2.RequestComment> __Marshaller_RequestComment = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC2.RequestComment.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPC2.ResponseComment> __Marshaller_ResponseComment = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC2.ResponseComment.Parser.ParseFrom);

    static readonly grpc::Method<global::gRPC2.RequestPost, global::gRPC2.Response> __Method_AddPost = new grpc::Method<global::gRPC2.RequestPost, global::gRPC2.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPost",
        __Marshaller_RequestPost,
        __Marshaller_Response);

    static readonly grpc::Method<global::gRPC2.RequestPost, global::gRPC2.ResponsePost> __Method_UpdatePost = new grpc::Method<global::gRPC2.RequestPost, global::gRPC2.ResponsePost>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePost",
        __Marshaller_RequestPost,
        __Marshaller_ResponsePost);

    static readonly grpc::Method<global::gRPC2.RequestById, global::gRPC2.Response> __Method_DeletePost = new grpc::Method<global::gRPC2.RequestById, global::gRPC2.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePost",
        __Marshaller_RequestById,
        __Marshaller_Response);

    static readonly grpc::Method<global::gRPC2.RequestById, global::gRPC2.ResponsePost> __Method_GetPostById = new grpc::Method<global::gRPC2.RequestById, global::gRPC2.ResponsePost>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPostById",
        __Marshaller_RequestById,
        __Marshaller_ResponsePost);

    static readonly grpc::Method<global::gRPC2.RequestById, global::gRPC2.ResponseListPost> __Method_GetAllPosts = new grpc::Method<global::gRPC2.RequestById, global::gRPC2.ResponseListPost>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllPosts",
        __Marshaller_RequestById,
        __Marshaller_ResponseListPost);

    static readonly grpc::Method<global::gRPC2.RequestComment, global::gRPC2.ResponseComment> __Method_AddComment = new grpc::Method<global::gRPC2.RequestComment, global::gRPC2.ResponseComment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddComment",
        __Marshaller_RequestComment,
        __Marshaller_ResponseComment);

    static readonly grpc::Method<global::gRPC2.RequestComment, global::gRPC2.ResponseComment> __Method_UpdateComment = new grpc::Method<global::gRPC2.RequestComment, global::gRPC2.ResponseComment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateComment",
        __Marshaller_RequestComment,
        __Marshaller_ResponseComment);

    static readonly grpc::Method<global::gRPC2.RequestById, global::gRPC2.ResponseComment> __Method_GetCommentById = new grpc::Method<global::gRPC2.RequestById, global::gRPC2.ResponseComment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCommentById",
        __Marshaller_RequestById,
        __Marshaller_ResponseComment);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPC2.ApiServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MyService</summary>
    [grpc::BindServiceMethod(typeof(MyService), "BindService")]
    public abstract partial class MyServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::gRPC2.Response> AddPost(global::gRPC2.RequestPost request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPC2.ResponsePost> UpdatePost(global::gRPC2.RequestPost request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPC2.Response> DeletePost(global::gRPC2.RequestById request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPC2.ResponsePost> GetPostById(global::gRPC2.RequestById request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPC2.ResponseListPost> GetAllPosts(global::gRPC2.RequestById request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPC2.ResponseComment> AddComment(global::gRPC2.RequestComment request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPC2.ResponseComment> UpdateComment(global::gRPC2.RequestComment request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPC2.ResponseComment> GetCommentById(global::gRPC2.RequestById request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MyServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddPost, serviceImpl.AddPost)
          .AddMethod(__Method_UpdatePost, serviceImpl.UpdatePost)
          .AddMethod(__Method_DeletePost, serviceImpl.DeletePost)
          .AddMethod(__Method_GetPostById, serviceImpl.GetPostById)
          .AddMethod(__Method_GetAllPosts, serviceImpl.GetAllPosts)
          .AddMethod(__Method_AddComment, serviceImpl.AddComment)
          .AddMethod(__Method_UpdateComment, serviceImpl.UpdateComment)
          .AddMethod(__Method_GetCommentById, serviceImpl.GetCommentById).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MyServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddPost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC2.RequestPost, global::gRPC2.Response>(serviceImpl.AddPost));
      serviceBinder.AddMethod(__Method_UpdatePost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC2.RequestPost, global::gRPC2.ResponsePost>(serviceImpl.UpdatePost));
      serviceBinder.AddMethod(__Method_DeletePost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC2.RequestById, global::gRPC2.Response>(serviceImpl.DeletePost));
      serviceBinder.AddMethod(__Method_GetPostById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC2.RequestById, global::gRPC2.ResponsePost>(serviceImpl.GetPostById));
      serviceBinder.AddMethod(__Method_GetAllPosts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC2.RequestById, global::gRPC2.ResponseListPost>(serviceImpl.GetAllPosts));
      serviceBinder.AddMethod(__Method_AddComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC2.RequestComment, global::gRPC2.ResponseComment>(serviceImpl.AddComment));
      serviceBinder.AddMethod(__Method_UpdateComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC2.RequestComment, global::gRPC2.ResponseComment>(serviceImpl.UpdateComment));
      serviceBinder.AddMethod(__Method_GetCommentById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC2.RequestById, global::gRPC2.ResponseComment>(serviceImpl.GetCommentById));
    }

  }
}
#endregion
